{
  "version": 3,
  "sources": ["../../.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js", "../../.pnpm/focus-trap@7.6.4/node_modules/focus-trap/index.js", "../../.pnpm/components@https+++codeload.github.com+nuqayah+components+tar.gz+refs+tags+v2.0.49/node_modules/components/src/util.js"],
  "sourcesContent": ["export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n", "import {\n  tabbable,\n  focusable,\n  isFocusable,\n  isTabbable,\n  getTabIndex,\n} from 'tabbable';\n\nconst activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n\n    if (\n      trapStack.length > 0 &&\n      !trapStack[trapStack.length - 1]._isManuallyPaused()\n    ) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  },\n};\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e?.key === 'Escape' || e?.key === 'Esc' || e?.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e?.key === 'Tab' || e?.keyCode === 9;\n};\n\n// checks for TAB by default\nconst isKeyForward = function (e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nconst isKeyBackward = function (e) {\n  return isTabEvent(e) && e.shiftKey;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nconst internalTrapStack = [];\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const trapStack = userOptions?.trapStack || internalTrapStack;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward,\n    isKeyBackward,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element, event) {\n    const composedPath =\n      typeof event?.composedPath === 'function'\n        ? event.composedPath()\n        : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        composedPath?.includes(container) ||\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  const getNodeForOption = function (\n    optionName,\n    { hasFallback = false, params = [] } = {}\n  ) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\n          `\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`\n        );\n      }\n\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\n            `\\`${optionName}\\` as selector refers to no known node`\n          );\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus', { hasFallback: true });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (\n      node === undefined ||\n      (node && !isFocusable(node, config.tabbableOptions))\n    ) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      const firstTabbableNode =\n        tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      const lastTabbableNode =\n        tabbableNodes.length > 0\n          ? tabbableNodes[tabbableNodes.length - 1]\n          : undefined;\n\n      const firstDomTabbableNode = focusableNodes.find((node) =>\n        isTabbable(node)\n      );\n      const lastDomTabbableNode = focusableNodes\n        .slice()\n        .reverse()\n        .find((node) => isTabbable(node));\n\n      const posTabIndexesFound = !!tabbableNodes.find(\n        (node) => getTabIndex(node) > 0\n      );\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound,\n\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode,\n\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          const nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes\n                .slice(focusableNodes.indexOf(node) + 1)\n                .find((el) => isTabbable(el));\n            }\n\n            return focusableNodes\n              .slice(0, focusableNodes.indexOf(node))\n              .reverse()\n              .find((el) => isTabbable(el));\n          }\n\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (\n      state.containerGroups.find((g) => g.posTabIndexesFound) &&\n      state.containerGroups.length > 1\n    ) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  const getActiveElement = function (el) {\n    const activeElement = el.activeElement;\n\n    if (!activeElement) {\n      return;\n    }\n\n    if (\n      activeElement.shadowRoot &&\n      activeElement.shadowRoot.activeElement !== null\n    ) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n\n    return activeElement;\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === getActiveElement(document)) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement],\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  const findNextNavNode = function ({ target, event, isBackward = false }) {\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target, event);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.lastTabbableNode\n              : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.firstTabbableNode\n              : destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate,\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  const checkFocusIn = function (event) {\n    const target = getActualTarget(event);\n    const targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      let nextNode; // next node to focus, if we find one\n      let navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          const mruContainerIdx = findContainerIndex(\n            state.mostRecentlyFocusedNode\n          );\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          const { tabbableNodes } = state.containerGroups[mruContainerIdx];\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            const mruTabIdx = tabbableNodes.findIndex(\n              (node) => node === state.mostRecentlyFocusedNode\n            );\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (\n            !state.containerGroups.some((g) =>\n              g.tabbableNodes.some((n) => getTabIndex(n) > 0)\n            )\n          ) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent),\n        });\n      }\n\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkKeyNav = function (event, isBackward = false) {\n    state.recentNavEvent = event;\n\n    const destinationNode = findNextNavNode({ event, isBackward });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkTabKey = function (event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  const checkEscapeKey = function (event) {\n    if (\n      isEscapeEvent(event) &&\n      valueOrHandler(config.escapeDeactivates, event) !== false\n    ) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  const checkDomRemoval = function (mutations) {\n    const isFocusedNodeRemoved = mutations.some(function (mutation) {\n      const removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  const mutationObserver =\n    typeof window !== 'undefined' && 'MutationObserver' in window\n      ? new MutationObserver(checkDomRemoval)\n      : undefined;\n\n  const updateObservedNodes = function () {\n    if (!mutationObserver) {\n      return;\n    }\n\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true,\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      onActivate?.();\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate?.();\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      onDeactivate?.();\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate?.();\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = true;\n\n      return this._setPausedState(true, pauseOptions);\n    },\n\n    unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = false;\n\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n\n      return this._setPausedState(false, unpauseOptions);\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      updateObservedNodes();\n\n      return this;\n    },\n  };\n\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value() {\n        return state.manuallyPaused;\n      },\n    },\n    _setPausedState: {\n      value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n\n        state.paused = paused;\n        if (paused) {\n          const onPause = getOption(options, 'onPause');\n          const onPostPause = getOption(options, 'onPostPause');\n          onPause?.();\n\n          removeListeners();\n          updateObservedNodes();\n\n          onPostPause?.();\n        } else {\n          const onUnpause = getOption(options, 'onUnpause');\n          const onPostUnpause = getOption(options, 'onPostUnpause');\n\n          onUnpause?.();\n\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n\n          onPostUnpause?.();\n        }\n\n        return this;\n      },\n    },\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n", "import escape_regex from 'escape-string-regexp'\nexport {default as escape_regex} from 'escape-string-regexp'\nimport {createFocusTrap} from 'focus-trap'\nimport {clsx} from 'clsx'\nimport {twMerge} from 'tailwind-merge'\n\nexport const round = n => Math.round(n * 10) / 10\nexport const ar_nums = s => ('' + s).replace(/[0-9]/g, d => '٠١٢٣٤٥٦٧٨٩'.substr(+d, 1))\nexport const ar_nums_fmt = num => Intl.NumberFormat('ar-SA').format(num)\nexport const fmt_num = n => document.documentElement.lang === 'ar' ? ar_nums(n) : n\nexport const fmt_date = d => (new Date(d)).toLocaleString('en-UK')\nexport const fmt_time = s => (new Date(s * 1000).toISOString().slice(10, 19)).replace(/T(00:)?/, '')\nexport const en_nums = s => s.replace(/[٠-٩]/g, d => d.charCodeAt(0) - 0x660)\nexport const strip_harakat = s => ('' + s).replace(/[ً-ْۖ-ٰۜ]/g, '')\nexport const now_hours = () => ms_to_hours(Date.now())\nexport const clone_object = o => JSON.parse(JSON.stringify(o))\nexport const int_clamp = (int, min, max) => Math.max(Math.min(int, max), min)\nexport const int_clamp_loop = (int, min, max) => int < min ? max : int > max ? min : int\nexport function debounce(fn, timeout) {\n    let timeout_id\n    return (...args) => {\n        clearTimeout(timeout_id)\n        timeout_id = setTimeout(() => fn(...args), timeout)\n    }\n}\nexport function throttle(fn, limit) {\n    let last_fn\n    let last_ran = Date.now() - (limit + 1)\n    return function(...args) {\n        clearTimeout(last_fn)\n        last_fn = setTimeout(() => {\n            fn(...args)\n            last_ran = Date.now()\n        }, limit - (Date.now() - last_ran))\n    }\n}\nexport function split(string, delimiter, n) {\n    const parts = string.split(delimiter)\n    return [...parts.slice(0, n - 1), parts.slice(n - 1).join(delimiter)]\n}\nexport const add_tatweel = s => s.replace(/([بت-خس-غف-نهي][ً-ْ]*)(?=[ء-ي])/g, '$1ـ').replaceAll('لـا', 'لا')\nexport const honorifics_list = 'ﷻ﵎﷾﷿|ﷺ﵊﵌|﵇﵍﵈﵉|﵁﵂﵃﵄﵅|﵀﵏|﷽'.split('|')\n\nexport function html_entities(s) {\n    const repls = {'&': '&amp;', '<': '&lt;', '>': '&gt;'}\n    return s.replace(RegExp(`[${Object.keys(repls).join('')}]`, 'g'), m => repls[m])\n}\n\nexport function shuffle(ar) {\n    ar = [...ar]\n    for (let j, x, i = ar.length; i; j = parseInt(Math.random() * i), x = ar[--i], ar[i] = ar[j], ar[j] = x);\n    return ar\n}\n\nexport function get_image_xy(src) {\n    const img = new Image\n    img.src = src\n    return new Promise(resolve => img.onload = () => resolve({x: img.width, y: img.height}))\n}\n// For virtualListDynamic\nexport function max_supported_height() {\n    const div = Object.assign(document.createElement('div'), {\n        innerHTML: '<div style=\"height: 1e9px\"></div>',\n        style: 'position: absolute; height: 1px; opacity: 0',\n    })\n    document.body.appendChild(div)\n    const height = div.firstChild.offsetHeight || 17895697 // Workaround for Firefox\n    div.remove()\n    return height\n}\nexport function median(values) {\n    const array = [...values].sort((a, b) => a - b)\n    const middle = Math.floor(array.length / 2)\n    return array.length % 2 ? array[middle] : (array[middle - 1] + array[middle]) / 2.0\n}\nexport function repeat_click(el, callback) {\n    let repeat_interval\n    let click_count = 0\n    function click_wrapper(e) {\n        cleanup()\n        if (window._useragent.ios) // Prevent text selection\n            e.preventDefault()\n        callback(++click_count)\n        repeat_interval = setInterval(() => callback(++click_count), 150)\n    }\n    // Use instead of pointer* events since e.preventDefault doesn't work on them\n    const [start_ev, end_ev] = window._useragent.is_touch ? ['touchstart', 'touchend'] : ['mousedown', 'mouseup']\n    const cleanup = () => {\n        clearInterval(repeat_interval)\n        click_count = 0\n    }\n    el.addEventListener(start_ev, click_wrapper)\n    document.documentElement.addEventListener(end_ev, cleanup)\n    return {\n        destroy() {\n            document.documentElement.removeEventListener(end_ev, cleanup)\n        }\n    }\n}\n\nexport function get_vh_offset() {\n    const div = create_el('div', {style: 'position: absolute; height: 100vh'})\n    document.body.appendChild(div)\n    const {clientHeight} = div\n    div.remove()\n    return clientHeight - window.innerHeight\n}\nexport function set_top_offset(el, visible=true) {\n    function update(visible=true) {\n        if (el && visible)\n            setTimeout(() => {\n                el.style.setProperty('--top-offset', `${el.getBoundingClientRect().top + 5 + window._VH_OFFSET}px`)\n            }, 15)\n    }\n    if (visible)\n        update(visible)\n    return {update}\n}\nexport function append_to(el, cont) {\n    function update(cont) {\n        if (el.parentElement !== cont)\n            cont.appendChild(el)\n    }\n    update(cont)\n    return {update}\n}\nexport function init_useragent_info() {\n    const UA = navigator.userAgent\n    const doc_classes = document.documentElement.classList\n    window._useragent = {\n        ios: /iPad|iPhone|iPod/.test(UA) || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1),\n        safari: 'GestureEvent' in window,\n        pwa: window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone,\n        is_touch: 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\n    }\n    if (window._useragent.safari)\n        doc_classes.add('safari')\n\n    if (window._useragent.ios)\n        doc_classes.add('ios')\n\n    if (UA.includes('Firefox'))\n        doc_classes.add('firefox')\n\n    if (/Windows NT|Intel Mac OS X/.test(UA))\n        doc_classes.add('non-mobile')\n    else if (/Android.*Chrome\\//.test(UA))\n        doc_classes.add('chrome-android')\n}\nexport function add_tab_check() {\n    window.addEventListener('keydown', function check_tab(e) {\n        if (e.key === 'Tab') {\n            document.documentElement.classList.add('user-is-tabbing')\n            window.removeEventListener('keydown', check_tab)\n        }\n    })\n}\n\nexport const unescape_str = s => s.replace(/(^|[^\\\\])\\\\(n|t|u[0-9a-f]{4})/g, (m, m1, m2) => JSON.parse(`\"\\\\${m2}\"`))\nexport function add_zwj(str) {\n    return window._useragent?.safari ? str.replace(/([ئبت-خس-غف-نهيی])([^ء-يی\\n ]*<[^>]+>[ً-ْٰۖۗۚۛۜ]*)(?=[آ-يی])/g, '$1&zwj;$2&zwj;') : str\n}\nexport const multi_match_map = {ا: 'اأآإى', أ: 'أإءؤئ', ء: 'ءأإؤئ', ت: 'تة', ة: 'ةته', ه: 'هة', ى: 'ىاي', ي: 'يى'}\nexport const multi_match_re = RegExp(`[${Object.keys(multi_match_map).join('')}]`, 'g')\nexport function prep_ar_query(q) {\n    q = escape_regex(strip_harakat(q)).replace(/[ء-يّ]/g, '$&[ً-ْ]*')\n    // 'g' isn't usually needed since we only .test, but if highlighting we need 'g'\n    return RegExp(q.replace(multi_match_re, m => `[${multi_match_map[m]}]`), 'g')\n}\n\nexport function prep_ar_query_gapped(q, strip_regex = /[^\\p{sc=Arabic}\\p{N} ]/gu) {\n    q = q.replace(strip_regex, '').trim()\n    return RegExp(q.replace(/\\s+/g, '.*?').replace(multi_match_re, m => `[${multi_match_map[m]}]`))\n}\nexport function highlight_gapped(qry, str) {\n    if (qry instanceof RegExp ? qry.source === '(?:)' : !qry)\n        return str // An empty regex will match every char\n    const parts = qry instanceof RegExp ? qry.source.split('.*?') : qry.split(' ')\n    // Avoid highlighting short strings globally, as it adds noise\n    return add_zwj(parts.reduce((acc, s) => acc.replace(RegExp(s, 'i' + (s.length > 2 ? 'g' : '')), '<mark>$&</mark>'), str))\n}\nexport function highlight(qry, str, prep_query, should_prep_query = true) {\n    // Note: if qry matches many chars it'll create many <mark> tags which can affect perf\n    if (!qry)\n        return str\n    qry = qry instanceof RegExp || !should_prep_query ? qry : prep_ar_query(qry)\n    return add_zwj(str.replace(qry, '<mark>$&</mark>'))\n}\n\nexport function basic_searcher(q, str) {\n    if (q instanceof RegExp) {\n        q.lastIndex = 0 // In case it has the g flag set\n        return q.test(str)\n    }\n    else\n        return str.toLowerCase().includes(q.toLowerCase())\n}\nexport function filterer(query, items, filter, should_prep_query = true) {\n    // filter can be a fn, an array of keys to search, or unset\n    const filter_fn = Array.isArray(filter)\n        ? (q, item) => filter.some(key => basic_searcher(q, item[key] || ''))\n        : filter || basic_searcher\n\n    if (!items.length) {\n        console.warn('No items')\n        return items\n    }\n    if (!query)\n        return items\n\n    if (should_prep_query && /[ء-ي]/.test(query))\n        query = prep_ar_query(query)\n    let matches = []\n    for (let i = 0, l = items.length; i < l; i++) {\n        if (filter_fn(query, items[i]))\n            matches.push(items[i])\n    }\n    return matches\n}\n\nexport const harakat_prep = s => RegExp(s.replace(/[ء-يّ]/g, '$&[ً-ْ]*'), 'g')\nexport const rand_id = () => Math.random().toString(16).slice(2, 8)\nexport function for_next(el) {\n    const next_el = el.nextElementSibling\n    if (!['input', 'textarea', 'select'].includes(next_el.tagName.toLowerCase())) {\n        console.warn(next_el + ' is not a valid for element')\n        return\n    }\n\n    const id = next_el.id || 'uid-' + rand_id()\n    next_el.id = id\n    el.htmlFor = id\n}\n\nexport function copy_text(text, avoid_clipboard) { // avoid_clipboard is for android webview\n    if ('clipboard' in navigator && !avoid_clipboard) {\n        if (typeof text?.then === 'function') {\n            if (window._useragent.safari)\n                return navigator.clipboard.write([\n                    new ClipboardItem({'text/plain': text}),\n                ])\n            return text.then(t => navigator.clipboard.writeText(t))\n        }\n        else\n            return navigator.clipboard.writeText(text)\n    }\n    else {\n        const ta = document.createElement('textarea')\n        Object.assign(ta, {value: text, style: 'position: fixed; top: -9999em'})\n        document.body.appendChild(ta)\n        if (window._useragent.ios) {\n            const range = document.createRange()\n            getSelection().removeAllRanges()\n            range.selectNode(ta)\n            getSelection().addRange(range)\n        }\n        else\n            ta.select()\n        document.execCommand('copy')\n        ta.remove()\n        if (window._useragent.ios)\n            getSelection().removeAllRanges()\n    }\n}\nexport const create_el = (tag, attrs) => Object.assign(document.createElement(tag), attrs)\nexport const on = (object, ev, cb) => object.addEventListener(ev, cb, false)\nexport const off = (object, ev, cb) => object.removeEventListener(ev, cb, false)\nexport const get_x_offset_percent = e => (e.currentTarget.offsetWidth - e.offsetX) / e.currentTarget.offsetWidth\nexport const el_index = el => [...el.parentElement.children].indexOf(el)\n\nexport const insert_str_at = (str, i, sub, ln) => str.slice(0, i) + sub + str.slice(i + ln)\nexport const apply_repls = (s, repls) => repls.reduce((str, repl) => str[repl[0] instanceof RegExp ? 'replace' : 'replaceAll'](repl[0], repl[1]), s)\n\nexport function separate_diff(diff, OMITTED_TEXT_MARKER = '\\n...\\n') {\n    const text = {old: '', new: ''}\n    for (let line of diff.split('\\n')) {\n        if (/^(diff|index|--- a\\/|\\+\\+\\+ b\\/)/.test(line))\n            continue\n        if (line.startsWith('@@')) {\n            if (text.old || text.new) {\n                text.old += OMITTED_TEXT_MARKER\n                text.new += OMITTED_TEXT_MARKER\n            }\n            continue\n        }\n        if (/^[-+ ]/.test(line)) {\n            const first = line[0]\n            line = line.slice(1) + '\\n'\n            if (first === ' ') {\n                text.old += line\n                text.new += line\n            }\n            else if (first === '-')\n                text.old += line\n            else if (first === '+')\n                text.new += line\n        }\n    }\n    return text\n}\n\nexport async function eval_script(script_text) { // eval pollutes scope\n    const blob = new Blob([script_text], {type: 'application/javascript'})\n    const url = URL.createObjectURL(blob)\n    const module = await import(/* @vite-ignore */ url)\n    URL.revokeObjectURL(url)\n    return module\n}\nexport function resize_textarea(el) {\n    if (CSS.supports('field-sizing: content')) {\n        el.style.setProperty('field-sizing', 'content')\n        return\n    }\n    function resize(el) {\n        el.style.height = ''\n        el.style.height = 5 + el.scrollHeight + 'px'\n    }\n    const resize_debounced = debounce(e => resize(e.target), 100)\n    el.addEventListener('input', resize_debounced)\n    resize(el)\n    return () => {\n        el.removeEventListener('input', resize_debounced)\n    }\n}\nexport function on_key(el, props) {\n    el.addEventListener('keydown', e => {\n        if (e.key in props)\n            props[e.key](e)\n    })\n}\n// Filter out buttons\nexport const form_to_json = form => Object.fromEntries([...form.elements].filter(el => el.matches('input,textarea,select')).map(el => [el.name, el.value]))\n\nexport async function sha1(msg) {\n    const msgUint8 = new TextEncoder().encode(msg)\n    const hashBuffer = await crypto.subtle.digest('SHA-1', msgUint8)\n    const hashArray = [...new Uint8Array(hashBuffer)]\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\n}\n\nexport function remove_props(obj, props) {\n    props.forEach(prop => {\n        delete obj[prop]\n    })\n    return obj\n}\nexport function longest_consecutive_sequence(nums) {\n    if (!nums.length)\n        return 0\n\n    nums = [...nums].sort((a, b) => a - b)\n    let curr_length = 1\n    let seq_length = 1\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] - nums[i - 1] === 1)\n            curr_length++\n        else if (nums[i] - nums[i - 1] > 1) {\n            seq_length = Math.max(curr_length, seq_length)\n            curr_length = 1\n        }\n    }\n\n    return seq_length\n}\nexport const get_items_by_keys = (keys, o) => Object.fromEntries(keys.filter(k => k in o).map(k => [k, o[k]]))\nexport const to_id_map = data => Object.fromEntries(data.map(f => [f.id, f]))\nexport const url_params = s => Object.fromEntries(new URLSearchParams(s).entries())\n\nexport function set_title(t) {\n    document.title = (t ? (t + ' | ') : '') + window.BASE_TITLE\n}\n\nexport function focus_trap(node, options) {\n    const trap = createFocusTrap(node, options)\n    trap.activate()\n    return {\n        destroy() {\n            trap.deactivate()\n        },\n    }\n}\nexport function in_view(node, params = {}) {\n    let observer\n\n    const handleIntersect = (e) => {\n        node.dispatchEvent(new CustomEvent(e[0].isIntersecting ? 'enter' : 'exit'))\n    }\n\n    function setObserver({ root, top, bottom }) {\n        const marginTop = top ? top * -1 : 0\n        const marginBottom = bottom ? bottom * -1 : 0\n        const rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`\n        const options = { root, rootMargin }\n        observer?.disconnect()\n        observer = new IntersectionObserver(handleIntersect, options)\n        observer.observe(node)\n    }\n\n    setObserver(params)\n\n    return {\n        update: setObserver,\n        destroy() {\n            observer?.disconnect()\n        },\n    }\n}\n\nexport function download_blob(data, file_name, mime_type) {\n    if (!mime_type)\n        mime_type = ({txt: 'text/plain', json: 'application/json'})[file_name.split('.').pop().toLowerCase()]\n    const blob = new Blob([data], {type: mime_type})\n    const url = URL.createObjectURL(blob)\n    const a = Object.assign(document.createElement('a'), {href: url, download: file_name, hidden: true})\n    document.body.appendChild(a)\n    a.click()\n    URL.revokeObjectURL(url)\n    document.body.removeChild(a)\n}\n/**\n * Reads a file and returns its content as a Promise.\n *\n * @param {File} file - The file to be read.\n * @param {('Text'|'BinaryString'|'DataURL'|'ArrayBuffer')} [read_as='Text'] - The format to read the file as. (default: 'Text')\n * @returns {Promise<string|ArrayBuffer>} A Promise that resolves with the file's content in the specified format.\n * @throws Will throw an error if the reading process fails.\n */\nexport function read_file(file, read_as = 'Text') {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader\n        reader.onload = () => {\n            resolve(reader.result)\n        }\n        reader.onerror = reject\n        reader['readAs' + read_as](file)\n    })\n}\n\nexport async function cache_first(url, cache_name = 'app-cache') {\n    const cache = await caches.open(cache_name)\n    return await cache.match(url) || await fetch(url).then(res => {\n        cache.put(url, res.clone())\n        return res\n    })\n}\n\nexport function split_text(text, num_of_parts=4, split_by='\\n\\n\\n') {\n    // used by collab before codemirror as each file was multiple tabs\n    const l = text.length\n    const part_l = Math.floor(l / num_of_parts)\n    const parts = []\n    const split_by_len = split_by.length\n    for (let i = 1; i < num_of_parts; i++) {\n        let offset = part_l\n        while (text.substr(offset, split_by_len) !== split_by && offset < l)\n            offset++\n        if (offset === l)\n            break\n        parts.push(text.slice(0, offset))\n        text = text.slice(offset + split_by_len)\n    }\n    parts.push(text)\n    return parts\n}\n\nexport function open_window(component, props, options={}) {\n    const popup = open('about:blank', '_blank', 'width=800,height=1200,resizable', false)\n    popup.addEventListener('beforeunload', () => {\n        popup._component?.$destroy()\n    })\n    if (options.append_css ?? true) {\n        ;[...document.querySelectorAll('link[rel=\"stylesheet\"], style')].forEach(el => {\n            const attrs_names = {LINK: ['rel', 'href'], STYLE: ['id', 'innerHTML']}\n            const attrs = get_items_by_keys(attrs_names[el.tagName], el)\n            popup.document.head.appendChild(create_el(el.tagName, attrs))\n        })\n    }\n    const cont = popup.document.createElement('main')\n    popup._component = new component({props, target: cont})\n    popup.document.body.appendChild(cont)\n    return popup\n}\n\nexport async function archive_book_images(id, file) {\n    const {server, dir} = await fetch('https://archive.org/metadata/' + id).then(r => r.json())\n    const url_base = `https://${server}/BookReader/BookReader`\n    const params = {id, subPrefix: file, server, itemPath: dir, format: 'json'}\n    const img_metadata_url = url_base + `JSIA.php?` + new URLSearchParams(params)\n    const img_metadata = (await fetch(img_metadata_url).then(r => r.json())).data.brOptions.data.flat()\n\n    return {\n        get_img: (i, scale=1) => url_base + `Images.php?` + new URLSearchParams({\n            id,\n            zip: `${dir}/${file}_jp2.zip`,\n            file: `${file}_jp2/${file}_${i.toString().padStart(4, '0')}.jp2`,\n            scale,\n        }),\n        sizes: img_metadata.map(x => [x.width, x.height]),\n        count: img_metadata.length,\n    }\n}\n\nexport async function clear_sw_and_caches() {\n    for (const reg of await navigator.serviceWorker.getRegistrations())\n        await reg.unregister()\n    await Promise.all((await caches.keys()).map(k => caches.delete(k)))\n}\n\n/**\n * Prepares a proxy configuration object for vite from an array of [path, target] pairs.\n *\n * @param {Array<[string, string]>} proxies An array of [path, target] pairs.\n * Each sub-array should contain two strings: the path to proxy and the target URL to proxy to.\n *\n * @returns {object} A proxy configuration object.\n */\nexport function prep_vite_proxy(proxies) {\n    return Object.fromEntries(proxies.map(([path, target]) => [\n        path,\n        {\n            target,\n            rewrite: p => p.replace(RegExp(`^${path}`), ''),\n            changeOrigin: true,\n            secure: false,\n        },\n    ]))\n}\n\n/**\n * Uses Intl.RelativeTimeFormat to format the relative time between two dates.\n *\n * @param {Intl.RelativeTimeFormat} rtf\n * @param {Date} d1\n * @param {Date} d2\n */\nexport function relative_time(rtf, d1, d2=new Date) {\n    const units = [\n        ['year',   31536000],\n        ['month',  2628000],\n        ['day',    86400],\n        ['hour',   3600],\n        ['minute', 60],\n        ['second', 1],\n    ]\n    const elapsed = (d1 - d2) / 1e3\n    const elapsed_abs = Math.max(Math.abs(elapsed), 1000) // In case < 1 second\n    const [unit, value] = units.find(([, value]) => elapsed_abs >= value)\n    return rtf.format(Math.round(elapsed / value), unit)\n}\n\n/**\n * Merge class names\n * @param {...string} inputs - The class names to merge\n * @returns {string} The merged class names\n */\nexport function cn(...inputs) {\n    return twMerge(clsx(inputs))\n}"],
  "mappings": "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",
  "names": ["activeFocusTraps", "activateTrap", "trapStack", "trap", "length", "activeTrap", "_setPausedState", "trapIndex", "indexOf", "push", "splice", "deactivateTrap", "_isManuallyPaused", "isSelectableInput", "node", "tagName", "toLowerCase", "select", "isEscapeEvent", "e", "key", "keyCode", "isTabEvent", "isKeyForward", "shiftKey", "isKeyBackward", "delay", "fn", "setTimeout", "valueOrHandler", "value", "_len", "arguments", "params", "Array", "_key", "apply", "getActualTarget", "event", "target", "shadowRoot", "composedPath", "internalTrapStack", "createFocusTrap", "elements", "userOptions", "doc", "document", "config", "_objectSpread", "returnFocusOnDeactivate", "escapeDeactivates", "delayInitialFocus", "state", "containers", "containerGroups", "tabbableGroups", "nodeFocusedBeforeActivation", "mostRecentlyFocusedNode", "active", "paused", "manuallyPaused", "delayInitialFocusTimer", "undefined", "recentNavEvent", "getOption", "configOverrideOptions", "optionName", "configOptionName", "findContainerIndex", "element", "findIndex", "_ref", "container", "tabbableNodes", "contains", "includes", "find", "getNodeForOption", "_ref2", "_ref2$hasFallback", "hasFallback", "_ref2$params", "optionValue", "_toConsumableArray", "Error", "concat", "querySelector", "err", "message", "getInitialFocusNode", "isFocusable", "tabbableOptions", "activeElement", "firstTabbableGroup", "firstTabbableNode", "updateTabbableNodes", "map", "tabbable", "focusableNodes", "focusable", "lastTabbableNode", "firstDomTabbableNode", "isTabbable", "lastDomTabbableNode", "slice", "reverse", "posTabIndexesFound", "getTabIndex", "nextTabbableNode", "forward", "nodeIdx", "el", "filter", "group", "g", "getActiveElement", "tryFocus", "focus", "preventScroll", "getReturnFocusNode", "previousActiveElement", "findNextNavNode", "_ref3", "_ref3$isBackward", "isBackward", "destinationNode", "containerIndex", "containerGroup", "startOfGroupIndex", "_ref4", "destinationGroupIndex", "destinationGroup", "lastOfGroupIndex", "_ref5", "checkPointerDown", "clickOutsideDeactivates", "deactivate", "returnFocus", "allowOutsideClick", "preventDefault", "checkFocusIn", "targetContained", "Document", "stopImmediatePropagation", "nextNode", "navAcrossContainers", "mruContainerIdx", "mruTabIdx", "some", "n", "checkKeyNav", "checkTabKey", "checkEscapeKey", "checkClick", "addListeners", "addEventListener", "capture", "passive", "removeListeners", "removeEventListener", "checkDomRemoval", "mutations", "isFocusedNodeRemoved", "mutation", "removedNodes", "from", "mutationObserver", "window", "MutationObserver", "updateObservedNodes", "disconnect", "observe", "subtree", "childList", "activate", "activateOptions", "onActivate", "onPostActivate", "checkCanFocusTrap", "finishActivation", "then", "deactivateOptions", "options", "onDeactivate", "onPostDeactivate", "checkCanReturnFocus", "clearTimeout", "finishDeactivation", "pause", "pauseOptions", "unpause", "unpauseOptions", "updateContainerElements", "containerElements", "elementsAsArray", "Boolean", "Object", "defineProperties", "onPause", "onPostPause", "onUnpause", "onPostUnpause", "visible", "cont", "el", "value"]
}
